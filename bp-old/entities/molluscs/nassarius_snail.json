{
  "format_version": "1.16.0",
  "minecraft:entity": {
    "description": {
      "identifier": "aqua:nassarius_snail",
      "is_spawnable": true,
      "is_summonable": true,
      "is_experimental": false
    },

    "component_groups":{
      "kill_entity": {
        "minecraft:transformation": {
          "begin_transform_sound": "bucket.fill_fish",
          "into": "aqua:dummy"
        }
      },
      "not_in_water": {
        "minecraft:behavior.move_to_water": {
          "priority": 1,
          "search_range": 15,
          "search_height": 5,
          "goal_radius": 0.2
        }
      }
    },
    
    "components": {
      "minecraft:nameable": {},
      "minecraft:balloonable": {},
        "minecraft:leashable": {
          "soft_distance": 4.0,
          "hard_distance": 6.0,
          "max_distance": 10.0
        },
      "minecraft:preferred_path" : {
        "max_fall_blocks" : 3,
        "jump_cost" : 0,
        "default_block_cost" : 0,
        "preferred_path_blocks" : [
          { 
            "cost" : 0,
            "blocks" : [ 
              "water",
              "flowing_water"
            ]
          },
          { 
            "cost" : 100,
            "blocks" : [ 
              "air"
            ]
          }
        ]
      },
      "minecraft:experience_reward": {
        "on_death": "query.last_hit_by_player ? Math.Random(1,3) : 0"
      },
      "minecraft:type_family": {
        "family": [ "nassarius_snail", "snail", "mollusc", "prey", "aquatic", "small", "freshwater" ]
      },
      "minecraft:behavior.avoid_mob_type": {
        "priority": 3,
        "entity_types": [
          {
            "filters": {
              "any_of": [
                { "test": "is_family", "subject": "other", "value": "player"},
                {
                  "all_of": [
                    { "test": "is_family", "subject": "other", "value": "predator"},
                    { "test": "is_family", "subject": "other", "value": "freshwater"},
                    { "test": "is_family", "subject": "other", "value": "aquatic"},
                    {
                      "any_of": [
                        { "test": "is_family", "subject": "other", "value": "small"},
                        { "test": "is_family", "subject": "other", "value": "medium"},
                        { "test": "is_family", "subject": "other", "value": "large"}
                      ]
                    }
                  ]
                }
              ]
            },
            "max_dist": 6,
            "walk_speed_multiplier": 1.0,
            "sprint_speed_multiplier": 1.0
          }
        ]
      },
      "minecraft:collision_box": {
        "width": 0.3,
        "height": 0.3
      },
      "minecraft:health": {
        "value": 6,
        "max": 6
      },
      "minecraft:hurt_on_condition": {
        "damage_conditions": [
          {
            "filters": { "test": "in_lava", "subject": "self", "operator": "==", "value": true },
            "cause": "lava",
            "damage_per_tick": 4
          }
        ]
      },
      "minecraft:interact": {
        "interactions": [
          {
            "on_interact": {
              "filters": {
                "any_of": [
                  {
                    "all_of": [
                      {
                        "test": "has_equipment",
                        "subject": "other",
                        "domain": "hand",
                        "value": "bucket"
                      },
                      {
                        "test": "in_water",
                        "subject": "self",
                        "value": true
                      }
                    ]
                  },
                  {
                    "test": "has_equipment",
                    "subject": "other",
                    "domain": "hand",
                    "value": "water_bucket"
                  }
                ]
              },
              "event": "aqua:bucketed"
            },
            "use_item": true
          }
        ]
      },
      "minecraft:scale": {
        "value": 0.75
      },
      "minecraft:breathable": {
        "total_supply": 15,
        "suffocate_time": 0,
        "breathes_air": false,
        "breathes_water": true
      },
      "minecraft:movement": {
        "value": 0.1
      },
      "minecraft:navigation.walk": {
        "can_breach": false,
        "can_walk": false,
        "is_amphibious": true,
        "can_path_over_water": true,
        "blocks_to_avoid": [
          "air"
        ]
      },
      "minecraft:movement.basic": {
      },
      "minecraft:jump.static": {
      },
      "minecraft:can_climb": {},
      "minecraft:despawn": {
        "despawn_from_distance": { 
          "min_distance": 32,
          "max_distance": 40
        }
      },
      "minecraft:behavior.avoid_block": {
        "priority": 2,
        "tick_interval": 5,
        "search_range": 8,
        "search_height": 4,
        "sprint_speed_modifier": 1.1,
        "target_selection_method": "nearest",
        "target_blocks": [
          "minecraft:air"
        ]
      },
      "minecraft:behavior.random_stroll": {
        "priority": 1,
        "speed_multiplier": 1
      },
      "minecraft:timer": {
        "looping": true,
        "time": 0.5,
        "time_down_event": {
            "event": "test_water"
        }
      },
      "minecraft:conditional_bandwidth_optimization": {
      },
      "minecraft:physics": {
        "has_gravity": true
      },
      "minecraft:pushable": {
        "is_pushable": true,
        "is_pushable_by_piston": true
      }
    },
    
    "events":{
      "test_water": {
        "sequence": [
          {
            "filters": { "test": "in_water", "operator": "not" },
            "add": {
              "component_groups": [
                "not_in_water"
              ]
            }
          },
          {
            "filters": { "test": "in_water" },
            "remove": {
              "component_groups": [
                "not_in_water"
              ]
            }
          }
        ]
      },
      "aqua:bucketed": {
        "add": {
          "component_groups": [
            "kill_entity"
          ]
        },
        "run_command": {
          "command": "tag @s add bucketer",
          "target": "other"
        }
      }
    }
  }
}
